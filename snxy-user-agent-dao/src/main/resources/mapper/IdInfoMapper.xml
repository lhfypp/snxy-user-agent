<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.snxy.user.agent.dao.mapper.IdInfoMapper">
  <resultMap id="BaseResultMap" type="com.snxy.user.agent.domain.IdInfo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="online_user_id" jdbcType="BIGINT" property="onlineUserId" />
    <result column="id_front_url" jdbcType="VARCHAR" property="idFrontUrl" />
    <result column="id_back_url" jdbcType="VARCHAR" property="idBackUrl" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="age" jdbcType="TIMESTAMP" property="age" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
    <result column="id_number" jdbcType="VARCHAR" property="idNumber" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="certification_status" jdbcType="INTEGER" property="certificationStatus" />
    <result column="is_delete" jdbcType="TINYINT" property="isDelete" />
  </resultMap>
  <sql id="Base_Column_List">
    id, online_user_id, id_front_url, id_back_url, name, age, gender, id_number, gmt_create, 
    gmt_modified, certification_status, is_delete
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from id_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from id_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.snxy.user.agent.domain.IdInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into id_info (online_user_id, id_front_url, id_back_url, 
      name, age, gender, 
      id_number, gmt_create, gmt_modified, 
      certification_status, is_delete)
    values (#{onlineUserId,jdbcType=BIGINT}, #{idFrontUrl,jdbcType=VARCHAR}, #{idBackUrl,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{age,jdbcType=TIMESTAMP}, #{gender,jdbcType=INTEGER}, 
      #{idNumber,jdbcType=VARCHAR}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, 
      #{certificationStatus,jdbcType=INTEGER}, #{isDelete,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.snxy.user.agent.domain.IdInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into id_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="onlineUserId != null">
        online_user_id,
      </if>
      <if test="idFrontUrl != null">
        id_front_url,
      </if>
      <if test="idBackUrl != null">
        id_back_url,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="idNumber != null">
        id_number,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="certificationStatus != null">
        certification_status,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="onlineUserId != null">
        #{onlineUserId,jdbcType=BIGINT},
      </if>
      <if test="idFrontUrl != null">
        #{idFrontUrl,jdbcType=VARCHAR},
      </if>
      <if test="idBackUrl != null">
        #{idBackUrl,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=TIMESTAMP},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="idNumber != null">
        #{idNumber,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="certificationStatus != null">
        #{certificationStatus,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.snxy.user.agent.domain.IdInfo">
    update id_info
    <set>
      <if test="onlineUserId != null">
        online_user_id = #{onlineUserId,jdbcType=BIGINT},
      </if>
      <if test="idFrontUrl != null">
        id_front_url = #{idFrontUrl,jdbcType=VARCHAR},
      </if>
      <if test="idBackUrl != null">
        id_back_url = #{idBackUrl,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=TIMESTAMP},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="idNumber != null">
        id_number = #{idNumber,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="certificationStatus != null">
        certification_status = #{certificationStatus,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.snxy.user.agent.domain.IdInfo">
    update id_info
    set online_user_id = #{onlineUserId,jdbcType=BIGINT},
      id_front_url = #{idFrontUrl,jdbcType=VARCHAR},
      id_back_url = #{idBackUrl,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      age = #{age,jdbcType=TIMESTAMP},
      gender = #{gender,jdbcType=INTEGER},
      id_number = #{idNumber,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      certification_status = #{certificationStatus,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>